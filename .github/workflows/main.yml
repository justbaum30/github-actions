name: Push to main
on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Java
      uses: ./.github/actions/setup-java
    - name: Build
      run: ./gradlew bootJar
    - name: Upload Jar Artifacts
      uses: actions/upload-artifact@v2.2.4
      with:
        name: App Jar
        path: build/libs/**

  test:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Java
      uses: ./.github/actions/setup-java
    - name: Lint & Test
      run: ./gradlew check
    - name: Check Code Coverage
      run: ./gradlew jacocoTestCoverageVerification jacocoTestReport
    - name: Upload Test Reports Artifacts
      uses: actions/upload-artifact@v2.2.4
      if: always()
      with:
        name: Test Reports
        path: build/reports/**

  staging-deploy:
    runs-on: ubuntu-latest
    needs: test
    environment: staging
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        project_id: ${{ secrets.GCP_PROJECT }}
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        export_default_credentials: true
    - name: Download Jar
      uses: actions/download-artifact@v2.0.10
      with:
        name: App Jar
        path: build/libs/
    - name: Authorize Docker
      run: gcloud auth configure-docker
    - name: Build and Push Container
      run: |-
        docker build -t gcr.io/${{ secrets.GCP_PROJECT }}/band-service:${{  github.sha }} .
        docker push gcr.io/${{ secrets.GCP_PROJECT }}/band-service:${{  github.sha }}
    - name: Deploy to Cloud Run
      id: deploy
      uses: google-github-actions/deploy-cloudrun@v0.4.0
      with:
        service: band-service-staging
        image: gcr.io/${{ secrets.GCP_PROJECT }}/band-service:${{  github.sha }}
        region: us-central1
    - name: Smoke Tests
      run: echo "Run smoke tests..."

  production-deploy:
    runs-on: ubuntu-latest
    needs: staging-deploy
    environment: production
    steps:
    - name: Download Jar
      uses: actions/download-artifact@v2.0.10
      with:
        name: App Jar
        path: artifacts/
    - name: Dockerize App
      run: echo "Dockerizing..."
    - name: Deploy to Production
      run: echo "Deploying to production environment..."
    - name: Smoke Tests
      run: echo "Run smoke tests..."
